[{"/Users/mohitpanwar/Coding/React/dojo-blog/src/index.js":"1","/Users/mohitpanwar/Coding/React/dojo-blog/src/App.js":"2","/Users/mohitpanwar/Coding/React/dojo-blog/src/Navbar.js":"3","/Users/mohitpanwar/Coding/React/dojo-blog/src/Create.js":"4","/Users/mohitpanwar/Coding/React/dojo-blog/src/BlogDetails.js":"5","/Users/mohitpanwar/Coding/React/dojo-blog/src/Home.js":"6","/Users/mohitpanwar/Coding/React/dojo-blog/src/NotFound.js":"7","/Users/mohitpanwar/Coding/React/dojo-blog/src/BlogList.js":"8","/Users/mohitpanwar/Coding/React/dojo-blog/src/useFetch.js":"9","/Users/mohitpanwar/Coding/customerPortal2/src/index.js":"10","/Users/mohitpanwar/Coding/customerPortal2/src/App.js":"11","/Users/mohitpanwar/Coding/customerPortal2/src/BlogDetails.js":"12","/Users/mohitpanwar/Coding/customerPortal2/src/Navbar.js":"13","/Users/mohitpanwar/Coding/customerPortal2/src/Home.js":"14","/Users/mohitpanwar/Coding/customerPortal2/src/NotFound.js":"15","/Users/mohitpanwar/Coding/customerPortal2/src/Create.js":"16","/Users/mohitpanwar/Coding/customerPortal2/src/BlogList.js":"17","/Users/mohitpanwar/Coding/customerPortal2/src/useFetch.js":"18","/Users/mohitpanwar/Coding/customerPortal2/src/Sidebar.js":"19","/Users/mohitpanwar/Coding/customerPortal2/src/getPincodeDetails.js":"20","/Users/mohitpanwar/Coding/customerPortal2/src/GetPincodeDetails.js":"21","/Users/mohitpanwar/Coding/customerPortal2/src/UploadCsv.js":"22"},{"size":432,"mtime":1614655011425,"results":"23","hashOfConfig":"24"},{"size":798,"mtime":1614823500390,"results":"25","hashOfConfig":"24"},{"size":412,"mtime":1614823500391,"results":"26","hashOfConfig":"24"},{"size":1403,"mtime":1614823500391,"results":"27","hashOfConfig":"24"},{"size":851,"mtime":1614823500390,"results":"28","hashOfConfig":"24"},{"size":387,"mtime":1614823500391,"results":"29","hashOfConfig":"24"},{"size":263,"mtime":1614823500392,"results":"30","hashOfConfig":"24"},{"size":411,"mtime":1614823500390,"results":"31","hashOfConfig":"24"},{"size":1056,"mtime":1614823500392,"results":"32","hashOfConfig":"24"},{"size":432,"mtime":1614655011425,"results":"33","hashOfConfig":"34"},{"size":1047,"mtime":1616248441232,"results":"35","hashOfConfig":"34"},{"size":851,"mtime":1614823500390,"results":"36","hashOfConfig":"34"},{"size":459,"mtime":1616248452119,"results":"37","hashOfConfig":"34"},{"size":387,"mtime":1614823500391,"results":"38","hashOfConfig":"34"},{"size":263,"mtime":1614823500392,"results":"39","hashOfConfig":"34"},{"size":29286,"mtime":1616302797607,"results":"40","hashOfConfig":"34"},{"size":411,"mtime":1614823500390,"results":"41","hashOfConfig":"34"},{"size":1056,"mtime":1614823500392,"results":"42","hashOfConfig":"34"},{"size":1536,"mtime":1615043382973,"results":"43","hashOfConfig":"34"},{"size":580,"mtime":1615259189309,"results":"44","hashOfConfig":"34"},{"size":580,"mtime":1615259189309,"results":"45","hashOfConfig":"34"},{"size":3696,"mtime":1616464858594,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecspu9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"jzn6x0",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":4,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},"/Users/mohitpanwar/Coding/React/dojo-blog/src/index.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/App.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/Navbar.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/Create.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/BlogDetails.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/Home.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/NotFound.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/BlogList.js",[],"/Users/mohitpanwar/Coding/React/dojo-blog/src/useFetch.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/index.js",[],["96","97"],"/Users/mohitpanwar/Coding/customerPortal2/src/App.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/BlogDetails.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/Navbar.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/Home.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/NotFound.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/Create.js",["98","99","100","101","102","103","104","105","106","107","108","109"],"import { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport GetPincodeDetails from \"./GetPincodeDetails\";\nimport {useDropzone} from 'react-dropzone'\n\n\n\n\n\n\nconst Create = () => {\n  var consigneePincodeEntered = false;\n  const [title, setTitle] = useState('1');\n  const [body, setBody] = useState('1');\n  const [author, setAuthor] = useState('mario');\n  const history = useHistory();\n  const codType = \"Prepaid\";\n  const userID = \"API logistics\";\n\n  /*\n  \n  const [returnState,setReturnState] = useState('');\n  const [returnCity,setReturnCity] = useState('');*/\n  const [paymentMode,setPaymentMode] = useState(\"prepaid\");\n  const [consigneePincode, setConsigneePincode] = useState();\n  const [consigneeCity, setConsigneeCity] = useState('null');\n  const [consigneeState, setConsigneeState] = useState('null');\n  const [consigneeAddress, setConsigneeAddress] = useState('null');\n  const [consigneeName, setConsigneeName] = useState('null');\n  const [consigneePhone, setConsigneePhone] = useState('7045814007');\n  const [consigneeEmail, setConsigneeEmail] = useState('null');\n\n  //orderDetails\n  const [orderReferenceNumber, setOrderReferenceNumber] = useState('null');\n  const [orderNumberOfItems, setNumberOfItems] = useState(1);\n  const [orderWeightInGrams, setOrderWeightInGrams] = useState(500);\n  const [orderCommodityValue, setCommodityValue] = useState('null');\n  const [orderTaxValue, setTaxValue] = useState('null');\n  const [orderTotalValue, setTotalValue] = useState('null');\n  const [orderCODValue, setCODValue] = useState('null');\n  const [orderProductDescription, setOrderProductDescription] = useState('null');\n  const [orderProductCategory, setOrderProductCategory] = useState('null');\n  const [orderHSNCode, setOrderHSNCode] = useState('null');\n  const [orderMarkAsFragile, setOrderMarkAsFragile]=useState(false);\n\n  //sellerDetails\n  const[sellerDetailsSameAsRegistered,setSellerDetailsSameAsRegistered] = useState(true);\n  const[sellerName, setSellerName] = useState('null');\n  const[sellerGSTIN, setSellerGSTIN] = useState('null');\n  const[sellerAddress, setSellerAddress] = useState('null');\n  const[invoiceNumer,setInvoicenumber]= useState('null');\n\n    //gettingTodaysdate\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    today = yyyy + '/' + dd + '/' + mm;\n  const[invoiceDate,setInvoiceDate]= useState(today);\n\n\n  //pickupDetails\n  const [pickupPincode,setPickupPincode] = useState('null');\n  const [pickupCity, setPickupCity] = useState('null');\n  const [pickupState, setPickupState] = useState('null');\n  const [pickupAddress, setPickupAddress] = useState('null');\n  const [pickupPhone,setPickupPhone] = useState('null');\n\n  //ReturnDetails\n  const [returnPincode,setReturnPincode] = useState('null');\n  const [returnCity, setReturnCity] = useState('null');\n  const [returnState, setReturnState] = useState('null');\n  const [returnAddress, setReturnAddress] = useState('null');\n  const [returnPhone,setReturnPhone] = useState('null');\n  const [returnToOrigin,setReturnToOrigin] = useState(true);\n\n\n  //const { id } = useParams();\n  //const { data, error, isPending } = useFetch('http://localhost:9000/pincode/122002');\n  //console.log(data);\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = {title, body, author};\n    \n    convertFormToJson();\n    /*\n    fetch('http://localhost:8000/blogs/', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      // history.go(-1);\n      history.push('/');\n    })*/\n  }\n\n  const convertFormToJson = ()=>{\n\n    //shipmentObject\n    const shipment ={\n      addressType:\"Home\",\n    }\n    shipment.add = consigneeAddress;\n    shipment.phone = consigneePhone;\n    shipment.payment_mode = codType;\n    shipment.name = consigneeName;\n    shipment.pin = consigneePincode;\n    shipment.order = orderReferenceNumber;\n    shipment.consignee_gst_amount = orderTotalValue;\n    shipment.integrated_gst_amount = orderTotalValue;\n    shipment.seller_gst_tin = sellerGSTIN;\n    shipment.gst_cess_amount = orderTaxValue;\n    shipment.client_name = userID;\n    shipment.tax_value = orderTaxValue;\n    shipment.seller_tin = sellerGSTIN;\n    shipment.seller_gst_amount = orderTaxValue;\n    shipment.seller_inv = invoiceNumer;\n    shipment.city = consigneeCity;\n    shipment.commodity_value = orderCommodityValue;\n    shipment.weight = orderWeightInGrams;\n    shipment.return_state = returnState;\n    shipment.seller_name = sellerName;\n    shipment.fragile_shipment = orderMarkAsFragile;\n    shipment.return_city = returnCity;\n    shipment.return_phone = returnPhone;\n    shipment.category_of_goods = orderProductCategory;\n    shipment.cod_amount = orderCODValue;\n    shipment.return_country = \"India\";\n    shipment.state = consigneeState;\n    shipment.dangerous_good = false;\n    shipment.order_date = invoiceDate;\n    shipment.return_add = returnAddress;\n    shipment.total_amount = orderTotalValue;\n    shipment.seller_add = sellerAddress;\n    shipment.country = \"India\";\n    shipment.return_pin = returnPincode;\n    shipment.return_name = sellerName;\n    shipment.quantity = orderNumberOfItems;\n    \n//pickupObject\n     const pickup_location = {\n       name: \"mohit\",\n       country : \"India\",\n       phone: \"7045814007\"\n     };\n     pickup_location.city = pickupCity;\n     pickup_location.address = pickupAddress;\n     pickup_location.pincode = pickupPincode;\n     console.log(JSON.stringify(pickup_location));\n\n\n     var shipmentString = JSON.stringify(shipment);\n     \n     console.log(\"ShipmentString: \"+shipmentString);\n     var shipmentObject = shipmentString.slice(11);\n     console.log(shipmentObject);\n     const jsonObjectForServer = {\"shipments\":[JSON.parse(shipmentString)\n\n     ]\n     };\n\n     jsonObjectForServer.pickup_location = pickup_location;\n     console.log(JSON.stringify(jsonObjectForServer));\n\n     let headers = new Headers();\n\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', 'Basic ' + btoa(\"Mohit:Same\" ));\n      console.log(headers.get('Authorization'));\n\n\n\n     fetch('http://api.apilogistics.in:4000/api/orders', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(jsonObjectForServer),\n      \n      \n    }).then(async response => {\n      try {\n       const data = await response.text();\n       console.log('response data?', data);\n     } catch(error) {\n       console.log('Error happened here!')\n       console.error(error)\n     }\n    });\n\n    //\"{\\\"shipments\\\":[{\\\"add\\\":\\\"M25,NelsonMarg\\\",\\\"address_type\\\":\\\"home\\\",\\\"phone\\\":1234567890,\\\"payment_mode\\\":\\\"Prepaid\\/COD\\/Pickup\\/REPL\\\",\\\"name\\\":\\\"name-of-the-consignee\\\",\\\"pin\\\":325007,\\\"order\\\":\\\"orderid\\\",\\\"consignee_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"integrated_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"ewbn\\\":\\\"if ewbn is there no need to send additional keys for generating ewaybill only if the total package amount is greater than or equal to 50k\\\",\\\"consignee_gst_tin\\\":\\\"consignee_gst_tin\\\",\\\"seller_gst_tin\\\":\\\"seller_gst_tin\\\",\\\"client_gst_tin\\\":\\\"client_gst_tin\\\",\\\"hsn_code\\\":\\\"Required for ewaybill-hsn_code\\\",\\\"gst_cess_amount\\\":\\\"for ewaybill-gst_cess_amount\\\",\\\"client\\\":\\\"client-name-as-registered-with-delhivery\\\",\\\"tax_value\\\":\\\"taxvalue\\\",\\\"seller_tin\\\":\\\"sellertin\\\",\\\"seller_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"seller_inv\\\":\\\"sellerinv\\\",\\\"city\\\":\\\"Kota\\\",\\\"commodity_value\\\":\\\"commodityvalue\\\",\\\"weight\\\":\\\"1000\\\",\\\"return_state\\\":\\\"returnstate\\\",\\\"document_number\\\":\\\"for ewaybill-document_number,only mandatory in case of ewbn\\\",\\\"od_distance\\\":\\\"ditance between origin and destination\\\",\\\"sales_tax_form_ack_no\\\":\\\"ackno.\\\",\\\"document_type\\\":\\\"for ewaybill-document_type,only mandatory in case of ewbn\\\",\\\"seller_cst\\\":\\\"sellercst\\\",\\\"seller_name\\\":\\\"sellername\\\",\\\"fragile_shipment\\\":\\\"true\\\",\\\"return_city\\\":\\\"returncity\\\",\\\"return_phone\\\":\\\"returnphone\\\",\\\"qc\\\":{\\\"item\\\":[{\\\"images\\\":\\\"img1-static image url\\\",\\\"color\\\":\\\"Color of the product\\\",\\\"reason\\\":\\\"Damaged Product\\/Return reason of the product\\\",\\\"descr\\\":\\\"description of the product\\\",\\\"ean\\\":\\\"EAN no. that needs to be checked for a product (apparels)\\\",\\\"imei\\\":\\\"IMEI no. that needs to be checked for a product (mobile phones)\\\",\\\"brand\\\":\\\"Brand of the product\\\",\\\"pcat\\\":\\\"Product category like mobile, apparels etc.\\\",\\\"si\\\":\\\"special instruction for FE\\\"}]},\\\"shipment_height\\\":10,\\\"shipment_width\\\":11,\\\"shipment_length\\\":12,\\\"category_of_goods\\\":\\\"categoryofgoods\\\",\\\"cod_amount\\\":2125,\\\"return_country\\\":\\\"returncountry\\\",\\\"document_date\\\":\\\"for ewaybill-datetime,mandatory in case of ewbn\\\",\\\"taxable_amount\\\":\\\"for ewaybill-taxable_amount in case of multiple items only\\\",\\\"products_desc\\\":\\\"for ewaybill-mandatory,incase of intra-state required only\\\",\\\"state\\\":\\\"Rajasthan\\\",\\\"dangerous_good\\\":\\\"True\\/False\\\",\\\"waybill\\\":\\\"waybillno.(trackingid)\\\",\\\"consignee_tin\\\":\\\"consigneetin\\\",\\\"order_date\\\":\\\"2017-05-20 12:00:00\\\",\\\"return_add\\\":\\\"returnaddress\\\",\\\"total_amount\\\":21840,\\\"seller_add\\\":\\\"selleradd\\\",\\\"country\\\":\\\"India\\\",\\\"return_pin\\\":\\\"returnpin\\\",\\\"extra_parameters\\\":{\\\"return_reason\\\":\\\"string\\\"},\\\"return_name\\\":\\\"name\\\",\\\"supply_sub_type\\\":\\\"for ewaybill-supply_sub_type,mandatory in case of ewbn\\\",\\\"plastic_packaging\\\":\\\"true\\/false\\\",\\\"quantity\\\":\\\"quantity\\\"}],\\\"pickup_location\\\":{\\\"name\\\":\\\"client-warehouse-name-as-registered-with-delhivery\\\",\\\"city\\\":\\\"city\\\",\\\"pin\\\":\\\"pin-code\\\",\\\"country\\\":\\\"country\\\",\\\"phone\\\":\\\"phoneno.\\\",\\\"add\\\":\\\"+}}\"\n  }\n\n  const handleConsigneePincode = (event) => {\n    console.log(event.target.value)\n    var consigneePincode = event.target.value;\n    if (consigneePincode > 100000) {\n      setConsigneePincode(consigneePincode);\n      fetch('http://localhost:9000/pincode/' + consigneePincode)\n        .then((res => {\n          //console.log(res.json());\n          return res.json()\n        })).then(data => {\n          setConsigneeCity(data.CITY);\n          setConsigneeState(data.STATE);\n          console.log(\"city:\" + data.CITY);\n        }).catch(err => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted')\n          } else {\n            // auto catches network / connection error\n            //setIsPending(false);\n            //setError(err.message);\n            console.log(err.message);\n          }\n        });\n\n\n    }\n  }\n\n  const handleReturnPincode = (event) => {\n    console.log(event.target.value)\n    var returnPincode = event.target.value;\n    if (returnPincode > 100000) {\n      setReturnPincode(returnPincode);\n      fetch('http://localhost:9000/pincode/' + returnPincode)\n        .then((res => {\n          //console.log(res.json());\n          return res.json()\n        })).then(data => {\n          setReturnCity(data.CITY);\n          setReturnState(data.STATE);\n          console.log(\"city:\" + data.CITY);\n        }).catch(err => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted')\n          } else {\n            // auto catches network / connection error\n            //setIsPending(false);\n            //setError(err.message);\n            console.log(err.message);\n          }\n        });\n\n\n    }\n  }\n\n  const handlePickupPincode = (event) => {\n    console.log(event.target.value)\n    var pickupPincode = event.target.value;\n    if (pickupPincode > 100000) {\n      setPickupPincode(pickupPincode);\n      fetch('http://localhost:9000/pincode/' + pickupPincode)\n        .then((res => {\n          //console.log(res.json());\n          return res.json()\n        })).then(data => {\n          setPickupCity(data.CITY);\n          setPickupState(data.STATE);\n          console.log(\"city:\" + data.CITY);\n        }).catch(err => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted')\n          } else {\n            // auto catches network / connection error\n            //setIsPending(false);\n            //setError(err.message);\n            console.log(err.message);\n          }\n        });\n\n\n    }\n  }\n\n  const handleCommodityValue = (event) => {\n    console.log(event.target.value)\n    var commodity_value = event.target.value;\n    setTaxValue(commodity_value*0.18);\n    setTotalValue(commodity_value*1.18);\n    setCODValue(commodity_value*1.18); \n\n    \n  }\n\n  function MyDropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n      // Do something with the files\n    }, [])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n  \n    return (\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n          isDragActive ?\n            <p>Drop the files here ...</p> :\n            <p>Drag 'n' drop some files here, or click to select files</p>\n        }\n      </div>\n    )\n  }\n  \n  /*\n  const { error, isPending, data } = useFetch('http://localhost:9000/pincode/'+122002);\n    var cityFromPincode = data.CITY;\n    setConsigneeCity(cityFromPincode);*/\n\n  \n\n\n\n  return (\n    <div className=\"create\">\n      <h2>Book a new shipment</h2>\n      <form onSubmit={handleSubmit}>\n\n      \n\n\n        <label>Blog title:</label>\n        <input\n          type=\"text\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Blog body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <label>Blog author:</label>\n        <select\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        >\n          <option value=\"mario\">mario</option>\n          <option value=\"yoshi\">yoshi</option>\n        </select>\n\n        <label>Forward/Reverse Type:</label>\n        <select>\n          <option value=\"Forward\" selected > Forward</option>\n          <option value=\"Reverse\" >Reverse</option>\n        </select>\n\n        <label>COD Type:</label>\n        <select\n        value = {paymentMode}\n        onChange={(e) => setPaymentMode(e.target.value)}\n        >\n          <option value=\"COD\">COD</option>\n          <option value=\"Prepaid\" selected>Prepaid</option>\n        </select>\n        <h2>Consignee(To) Details</h2>\n        <div className=\"flexbox-container\">\n\n          <div className=\"customer-details-left\">\n            <label>Consignee pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required\n              //value = {consigneePincode}\n              onChange={handleConsigneePincode}\n\n            ></input>\n\n            <label>Consignee State*</label>\n            <select\n              value={consigneeState}>\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Consignee City*</label>\n            <input\n              type=\"text\"\n              value={consigneeCity}\n              required\n            ></input>\n\n            <label>Consignee Address*</label>\n            <input\n              type=\"text\"\n              required\n              value = {consigneeAddress}\n              onChange={(e) => setConsigneeAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-details-right\">\n            <label>Consignee Name*</label>\n            <input\n              type=\"text\"\n              required\n              value = {consigneeName}\n              onChange={(e) => setConsigneeName(e.target.value)}\n            />\n\n            <label>Consignee Phone*</label>\n            <input\n              type=\"number\"\n              required\n              value = {consigneePhone}\n              onChange={(e) => setConsigneePhone(e.target.value)}\n            />\n\n            <label>Consignee Email</label>\n            <input\n              type=\"text\"\n              value = {consigneeEmail}\n              onChange={(e) => setConsigneeEmail(e.target.value)}\n            />\n\n          </div>\n        </div>\n\n        <h2>Order Details</h2>\n        <div className=\"flexbox-container\">\n\n          <div className=\"customer-details-left\">\n            <label>Reference number*</label>\n            <input\n              type=\"text\"\n              required \n              value = {orderReferenceNumber}\n              onChange={(e) => setOrderReferenceNumber(e.target.value)}></input>\n            <label>Number of items*</label>\n            <input\n              type=\"number\"\n              defaultValue=\"1\"\n              required\n              value = {orderNumberOfItems}\n              onChange={(e) => setNumberOfItems(e.target.value)}\n            >\n            </input>\n\n            <label>Weight in Grams*</label>\n            <input\n              type=\"number\"\n              required\n              value = {orderWeightInGrams}\n              onChange={(e) => setOrderWeightInGrams(e.target.value)}\n\n            />\n          </div>\n          <div className=\"customer-details-mid\">\n            <label>Commodity Value*</label>\n            <input\n              type=\"number\"\n              required\n              //value = {orderCommodityValue}\n              onChange={handleCommodityValue}\n              ></input>\n\n            <label>Tax Value*</label>\n            <input\n              type=\"number\"\n              required\n              value = {orderTaxValue} \n              onChange={(e) => setTaxValue(e.target.value)}\n              >\n\n            </input>\n\n            <label>Total Value*</label>\n            <input\n              type=\"number\"\n              required \n              value = {orderTotalValue}\n              onChange={(e) => setTotalValue(e.target.value)}\n              >\n            </input>\n\n            <label>COD Amount*</label>\n            <input\n              type=\"number\"\n              required\n              value = {orderCODValue}\n              onChange={(e) => setCODValue(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-details-right\">\n            <label>Product Description*</label>\n            <input\n              type=\"text\"\n              required\n              value = {orderProductDescription}\n              onChange={(e) => setOrderProductDescription(e.target.value)}\n            />\n\n            <label>Product Category*</label>\n            <input\n              type=\"text\"\n              required\n              value = {orderProductCategory}\n              onChange={(e) => setOrderProductCategory(e.target.value)}\n            />\n          \n\n            <label>Mark as fragile</label>\n            <input\n            value = {orderMarkAsFragile}\n              type=\"checkbox\"\n              onChange={(e) => setOrderMarkAsFragile(e.target.value)}\n            />\n\n            <label>HSN Code</label>\n            <input\n              type=\"text\"\n              value = {orderHSNCode}\n              onChange={(e) => setOrderHSNCode(e.target.value)}              \n\n            />\n\n          </div>\n        </div>\n\n        <h2>Seller Details</h2>\n        <div className=\"flexbox-container\">\n\n          <div className=\"customer-details-left\">\n            <label>Is the seller details same as registered details?</label>\n            <select\n            onChange={(e) => setSellerDetailsSameAsRegistered(e.target.value)}\n            >\n              <option value={true}>Yes</option>\n              <option value={false} selected>No</option>\n            </select>\n\n          </div>\n          <div className=\"customer-details-mid\">\n            <label>Seller Name*</label>\n            <input\n              type=\"text\"\n              required\n              value = {sellerName}\n              onChange={(e) => setSellerName(e.target.value)}\n              ></input>\n\n            <label>Seller Address*</label>\n            <textarea\n              type=\"text\"\n              required \n              value = {sellerAddress}\n              onChange={(e) => setSellerAddress(e.target.value)}\n              >\n\n            </textarea>\n\n            <label>Seller GSTIN</label>\n            <input\n              type=\"text\"\n              size=\"15\"\n              value = {sellerGSTIN}\n              onChange={(e) => setSellerGSTIN(e.target.value)}\n            >\n            </input>\n          </div>\n\n          <div className=\"customer-details-right\">\n            <label>Invoice number</label>\n            <input\n              type=\"text\"\n              value = {invoiceNumer}\n              onChange={(e) => setInvoicenumber(e.target.value)}\n            />\n\n            <label>Invoice date</label>\n            <input\n              type=\"date\"\n              value = {invoiceDate}\n              onChange={(e) => setInvoiceDate(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <h2>Pickup and Return Details</h2>\n        <div className=\"flexbox-container\">\n\n          <div className=\"customer-details-left\">\n          </div>\n          <div className=\"customer-details-mid\">\n            <label>Pickup Address</label>\n            <select>\n\n            </select>\n\n            <label>pickup pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required \n              onChange={handlePickupPincode}></input>\n\n            <label>Pickup State*</label>\n            <select\n            value = {pickupState}\n            onChange={(e) => setPickupState(e.target.value)}\n            >\n              <option hidden disabled selected value></option>\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Pickup City*</label>\n            <input\n              type=\"text\"\n              value = {pickupCity}\n              onChange={(e) => setPickupCity(e.target.value)}\n              required\n            />\n\n            <label>Pickup Address*</label>\n            <textarea\n              type=\"text\"\n              required\n              value = {pickupAddress}\n              onChange={(e) => setPickupAddress(e.target.value)}\n            />\n\n\n\n          </div>\n\n          <div className=\"customer-details-right\">\n            <label>Return to Origin:</label>\n            <select\n            value = {returnToOrigin}\n            onChange={(e) => setReturnToOrigin(e.target.value)}\n            >\n              <option value=\"Yes\">Yes</option>\n              <option value=\"No\">No</option>\n            </select>\n\n            <label>Return pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required \n              onChange={handleReturnPincode}></input>\n\n            <label>Return State*</label>\n            <select\n            value = {returnState}\n            >\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Return City*</label>\n            <input\n              type=\"text\"\n              value={returnCity}\n              required\n            />\n\n            <label>Return Address*</label>\n            <textarea\n              type=\"text\"\n              required\n              value = {returnAddress}\n              onChange={(e) => setReturnAddress(e.target.value)}\n            />\n\n          </div>\n        </div>\n\n\n        <button>Add shipment</button>\n\n      </form>\n    </div>\n  );\n}\n\nexport default Create;","/Users/mohitpanwar/Coding/customerPortal2/src/BlogList.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/useFetch.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/Sidebar.js",[],"/Users/mohitpanwar/Coding/customerPortal2/src/getPincodeDetails.js",["110","111","112","113","114"],"/Users/mohitpanwar/Coding/customerPortal2/src/GetPincodeDetails.js",["115"],"import { useState, useEffect } from 'react';\nimport useFetch from \"./useFetch\";\n\nconst GetPincodeDetails = (pincode) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    const { data: dataReceived, error: newError, isPending: newIsPending } = useFetch('http://localhost:9000/pincode/' + pincode);\n    setData(dataReceived);\n    setIsPending(newIsPending);\n    setError(newError);\n    console.log(data);\n    return { data, isPending, error };\n}\n\nexport default GetPincodeDetails;\n",["116","117"],"/Users/mohitpanwar/Coding/customerPortal2/src/UploadCsv.js",["118","119"],"\nimport React from \"react\";\nimport { parse } from \"papaparse\";\nimport { useDropzone } from 'react-dropzone';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\n\n\n\n\n\nconst UploadCsv = () => {\n  const [highlighted, setHighlighted] = React.useState(false);\n  const [contacts, setContacts] = React.useState([\n   // { email: \"fake@gmail.com\", name: \"Fake\", phone: \"100\" },\n  ]);\n  const columns = [{\n    Header: 'Reference Number',\n    accessor: 'refern'\n  }, {\n    Header: 'Address Type',\n    accessor: 'addressType'\n  }, {\n    Header: 'Address',\n    accessor: 'add'\n  },\n  {\n    Header: 'City',\n    accessor: 'city'\n  },\n  {\n    Header: 'Pin code',\n    accessor: 'pin'\n  },\n  {\n    Header: 'State',\n    accessor: ''\n  },\n  {\n    Header: 'Consignee Name',\n    accessor: 'email'\n  },\n  {\n    Header: 'Phone',\n    accessor: 'email'\n  },\n  {\n    Header: 'Weight',\n    accessor: 'email'\n  },\n  {\n    Header: 'Payment',\n    accessor: 'email'\n  },\n  {\n    Header: 'Package Amount',\n    accessor: 'email'\n  },\n  {\n    Header: 'COD Amount',\n    accessor: 'email'\n  },\n  {\n    Header: 'Product to be Shipped',\n    accessor: 'email'\n  },\n  {\n    Header: 'Return Address',\n    accessor: 'email'\n  },\n  {\n    Header: 'Return Pin',\n    accessor: 'email'\n  },\n  {\n    Header: 'fragile_shipment',\n    accessor: 'email'\n  },\n  {\n    Header: 'Seller Name',\n    accessor: 'email'\n  },\n  {\n    Header: 'Seller Address',\n    accessor: 'email'\n  },\n  {\n    Header: 'Seller CST No',\n    accessor: 'email'\n  },\n  {\n    Header: 'Seller TIN',\n    accessor: 'email'\n  },\n  {\n    Header: 'Invoice No',\n    accessor: 'email'\n  },\n  {\n    Header: 'Invoice Date',\n    accessor: 'email'\n  },\n  {\n    Header: 'Quantity',\n    accessor: 'email'\n  },\n  {\n    Header: 'Commodity Value',\n    accessor: 'email'\n  },\n  {\n    Header: 'Tax Value',\n    accessor: 'email'\n  },\n  {\n    Header: 'Category of Goods',\n    accessor: 'email'\n  },\n  {\n    Header: 'Seller_GST_TIN',\n    accessor: 'email'\n  },\n  {\n    Header: 'HSN_Code',\n    accessor: 'email'\n  },\n  {\n    Header: 'Return Reason',\n    accessor: 'email'\n  },\n  {\n    Header: 'Vendor Pickup Location',\n    accessor: 'email'\n  },\n  {\n    Header: 'EWBN',\n    accessor: 'email'\n  },\n  {\n    Header: 'Age',\n    accessor: 'email'\n  },\n  {\n    Header: 'Age',\n    accessor: 'email'\n  },\n  ]\n\n  return (\n    <div>\n      <h1 className=\"text-center text-4xl\">Contact Import</h1>\n      <div\n        className={`p-6 my-2 mx-auto max-w-md border-2 ${highlighted ? \"border-green-600 bg-green-100\" : \"border-gray-600\"\n          }`}\n        onDragEnter={() => {\n          setHighlighted(true);\n        }}\n        onDragLeave={() => {\n          setHighlighted(false);\n        }}\n        onDragOver={(e) => {\n          e.preventDefault();\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          setHighlighted(false);\n\n          Array.from(e.dataTransfer.files)\n            .filter((file) => file.type === \"text/csv\")\n            .forEach(async (file) => {\n              const text = await file.text();\n              const result = parse(text, { header: true });\n              setContacts((existing) => [...existing, ...result.data]);\n            });\n        }}\n      >\n        DROP HERE\n      </div>\n\n\n\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.email}>\n            <strong>{contact.name}</strong>: {contact.email, contact.phone}\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <ReactTable\n          data={contacts}\n          columns={columns}\n        //defaultPageSize = {contacts.length}  \n        //pageSizeOptions = {[2,4, 6]}  \n        />\n      </div>\n\n    </div>\n\n\n\n\n  );\n}\n\n\n\nexport default UploadCsv;",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":20,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"124","severity":1,"message":"128","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":25},{"ruleId":"124","severity":1,"message":"130","line":13,"column":7,"nodeType":"126","messageId":"127","endLine":13,"endColumn":30},{"ruleId":"124","severity":1,"message":"131","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},{"ruleId":"124","severity":1,"message":"132","line":38,"column":31,"nodeType":"126","messageId":"127","endLine":38,"endColumn":48},{"ruleId":"124","severity":1,"message":"133","line":48,"column":9,"nodeType":"126","messageId":"127","endLine":48,"endColumn":38},{"ruleId":"124","severity":1,"message":"134","line":68,"column":10,"nodeType":"126","messageId":"127","endLine":68,"endColumn":21},{"ruleId":"124","severity":1,"message":"135","line":68,"column":22,"nodeType":"126","messageId":"127","endLine":68,"endColumn":36},{"ruleId":"124","severity":1,"message":"136","line":75,"column":22,"nodeType":"126","messageId":"127","endLine":75,"endColumn":36},{"ruleId":"124","severity":1,"message":"137","line":87,"column":11,"nodeType":"126","messageId":"127","endLine":87,"endColumn":15},{"ruleId":"124","severity":1,"message":"138","line":290,"column":12,"nodeType":"126","messageId":"127","endLine":290,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":1,"column":20,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"139","severity":2,"message":"140","line":5,"column":27,"nodeType":"126","endLine":5,"endColumn":35},{"ruleId":"139","severity":2,"message":"140","line":6,"column":37,"nodeType":"126","endLine":6,"endColumn":45},{"ruleId":"139","severity":2,"message":"140","line":7,"column":29,"nodeType":"126","endLine":7,"endColumn":37},{"ruleId":"139","severity":2,"message":"141","line":9,"column":77,"nodeType":"126","endLine":9,"endColumn":85},{"ruleId":"124","severity":1,"message":"125","line":1,"column":20,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"120","replacedBy":"142"},{"ruleId":"122","replacedBy":"143"},{"ruleId":"124","severity":1,"message":"144","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":186,"column":60,"nodeType":"147","messageId":"148","endLine":186,"endColumn":61},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useFetch' is defined but never used.","'GetPincodeDetails' is defined but never used.","'consigneePincodeEntered' is assigned a value but never used.","'history' is assigned a value but never used.","'setCommodityValue' is assigned a value but never used.","'sellerDetailsSameAsRegistered' is assigned a value but never used.","'pickupPhone' is assigned a value but never used.","'setPickupPhone' is assigned a value but never used.","'setReturnPhone' is assigned a value but never used.","'blog' is assigned a value but never used.","'MyDropzone' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"getPincodeDetails\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useFetch\" is called in function \"getPincodeDetails\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.",["149"],["150"],"'useDropzone' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]