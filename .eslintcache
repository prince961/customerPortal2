[{"/home/rahulkumar/Documents/customerPortal2/src/index.js":"1","/home/rahulkumar/Documents/customerPortal2/src/App.js":"2","/home/rahulkumar/Documents/customerPortal2/src/pages/Home/Home.js":"3","/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/CreateOrder.js":"4","/home/rahulkumar/Documents/customerPortal2/src/pages/Blog/BlogDetails.js":"5","/home/rahulkumar/Documents/customerPortal2/src/shared/components/Navigation/Navbar.js":"6","/home/rahulkumar/Documents/customerPortal2/src/shared/components/Navigation/Sidebar.js":"7","/home/rahulkumar/Documents/customerPortal2/src/shared/components/NotFound.js":"8","/home/rahulkumar/Documents/customerPortal2/src/pages/Blog/components/BlogList.js":"9","/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/components/UploadCsv.js":"10","/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/components/CreateSingle.js":"11","/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Button.js":"12","/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Modal.js":"13","/home/rahulkumar/Documents/customerPortal2/src/shared/components/Dropzone/Dropzone1.js":"14","/home/rahulkumar/Documents/customerPortal2/src/shared/hooks/useHttpClient.js":"15","/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/util/columns.js":"16","/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Backdrop.js":"17","/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/Auth.js":"18","/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/components/Register.js":"19","/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/components/Login.js":"20"},{"size":381,"mtime":1617385551251,"results":"21","hashOfConfig":"22"},{"size":1575,"mtime":1617418622633,"results":"23","hashOfConfig":"22"},{"size":733,"mtime":1617340808004,"results":"24","hashOfConfig":"22"},{"size":2959,"mtime":1617340807976,"results":"25","hashOfConfig":"22"},{"size":1183,"mtime":1617340808004,"results":"26","hashOfConfig":"22"},{"size":692,"mtime":1617419295528,"results":"27","hashOfConfig":"22"},{"size":1536,"mtime":1617340808004,"results":"28","hashOfConfig":"22"},{"size":263,"mtime":1617340117614,"results":"29","hashOfConfig":"22"},{"size":411,"mtime":1617340808004,"results":"30","hashOfConfig":"22"},{"size":1430,"mtime":1617340807980,"results":"31","hashOfConfig":"22"},{"size":29778,"mtime":1617340808004,"results":"32","hashOfConfig":"22"},{"size":1017,"mtime":1617340807996,"results":"33","hashOfConfig":"22"},{"size":1235,"mtime":1617340807996,"results":"34","hashOfConfig":"22"},{"size":2013,"mtime":1617340807996,"results":"35","hashOfConfig":"22"},{"size":1328,"mtime":1617340117614,"results":"36","hashOfConfig":"22"},{"size":4082,"mtime":1617340807996,"results":"37","hashOfConfig":"22"},{"size":289,"mtime":1617340807996,"results":"38","hashOfConfig":"22"},{"size":431,"mtime":1617375304435,"results":"39","hashOfConfig":"22"},{"size":1994,"mtime":1617419481855,"results":"40","hashOfConfig":"22"},{"size":1474,"mtime":1617374287071,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ejbx8s",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rahulkumar/Documents/customerPortal2/src/index.js",[],"/home/rahulkumar/Documents/customerPortal2/src/App.js",["86"],"/home/rahulkumar/Documents/customerPortal2/src/pages/Home/Home.js",["87"],"import { useEffect, useState } from \"react\";\nimport BlogList from \"../Blog/components/BlogList\";\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient\";\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const data = await sendRequest(\"http://localhost:8000/blogs\");\n        setBlogs(data);\n      } catch (err) {}\n    };\n    fetchBlogs();\n  }, [sendRequest]);\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isLoading && <div>Loading...</div>}\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n};\n\nexport default Home;\n",["88","89"],"/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/CreateOrder.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/Blog/BlogDetails.js",["90"],"import { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient\";\n\nconst BlogDetails = () => {\n  const { isLoading, error, sendRequest } = useHttpClient();\n  const { id } = useParams();\n  const [blog, setBlog] = useState;\n  useEffect(() => {\n    const fetchBlogDetails = async () => {\n      try {\n        const data = await sendRequest(`http://localhost:8000/blogs/${id}`);\n        setBlog(data);\n      } catch (err) {}\n    };\n    fetchBlogDetails();\n  }, [sendRequest]);\n  const history = useHistory();\n\n  const handleClick = async () => {\n    try {\n      await sendRequest(`http://localhost:8000/blogs/${blog.id}`, \"DELETE\");\n\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"blog-details\">\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {blog && (\n        <article>\n          <h2>{blog.title}</h2>\n          <p>Written by {blog.author}</p>\n          <div>{blog.body}</div>\n          <button onClick={handleClick}>delete</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","/home/rahulkumar/Documents/customerPortal2/src/shared/components/Navigation/Navbar.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/components/Navigation/Sidebar.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/components/NotFound.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/Blog/components/BlogList.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/components/UploadCsv.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/components/CreateSingle.js",["91","92","93","94","95","96","97","98","99","100"],"import { useState, useEffect, useCallback } from \"react\";\nimport { useHttpClient } from \"../../../shared/hooks/useHttpClient\";\nimport { useDropzone } from \"react-dropzone\";\nimport base64 from \"base-64\";\nconst CreateSingle = () => {\n  const { sendRequest } = useHttpClient();\n  const [title, setTitle] = useState(\"1\");\n  const [body, setBody] = useState(\"1\");\n  const [author, setAuthor] = useState(\"mario\");\n  const codType = \"Prepaid\";\n  const userID = \"API logistics\";\n\n  /*\n  \n  const [returnState,setReturnState] = useState('');\n  const [returnCity,setReturnCity] = useState('');*/\n  const [paymentMode, setPaymentMode] = useState(\"prepaid\");\n  const [consigneePincode, setConsigneePincode] = useState();\n  const [consigneeCity, setConsigneeCity] = useState(\"null\");\n  const [consigneeState, setConsigneeState] = useState(\"null\");\n  const [consigneeAddress, setConsigneeAddress] = useState(\"null\");\n  const [consigneeName, setConsigneeName] = useState(\"null\");\n  const [consigneePhone, setConsigneePhone] = useState(\"7045814007\");\n  const [consigneeEmail, setConsigneeEmail] = useState(\"null\");\n\n  //orderDetails\n  const [orderReferenceNumber, setOrderReferenceNumber] = useState(\"null\");\n  const [orderNumberOfItems, setNumberOfItems] = useState(1);\n  const [orderWeightInGrams, setOrderWeightInGrams] = useState(500);\n  const [orderCommodityValue, setCommodityValue] = useState(\"null\");\n  const [orderTaxValue, setTaxValue] = useState(\"null\");\n  const [orderTotalValue, setTotalValue] = useState(\"null\");\n  const [orderCODValue, setCODValue] = useState(\"null\");\n  const [orderProductDescription, setOrderProductDescription] = useState(\n    \"null\"\n  );\n  const [orderProductCategory, setOrderProductCategory] = useState(\"null\");\n  const [orderHSNCode, setOrderHSNCode] = useState(\"null\");\n  const [orderMarkAsFragile, setOrderMarkAsFragile] = useState(false);\n\n  //sellerDetails\n  const [\n    sellerDetailsSameAsRegistered,\n    setSellerDetailsSameAsRegistered,\n  ] = useState(true);\n  const [sellerName, setSellerName] = useState(\"null\");\n  const [sellerGSTIN, setSellerGSTIN] = useState(\"null\");\n  const [sellerAddress, setSellerAddress] = useState(\"null\");\n  const [invoiceNumer, setInvoicenumber] = useState(\"null\");\n\n  //gettingTodaysdate\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  var yyyy = today.getFullYear();\n  today = yyyy + \"/\" + dd + \"/\" + mm;\n  const [invoiceDate, setInvoiceDate] = useState(today);\n\n  //pickupDetails\n  const [pickupPincode, setPickupPincode] = useState(\"null\");\n  const [pickupCity, setPickupCity] = useState(\"null\");\n  const [pickupState, setPickupState] = useState(\"null\");\n  const [pickupAddress, setPickupAddress] = useState(\"null\");\n  const [pickupPhone, setPickupPhone] = useState(\"null\");\n\n  //ReturnDetails\n  const [returnPincode, setReturnPincode] = useState(\"null\");\n  const [returnCity, setReturnCity] = useState(\"null\");\n  const [returnState, setReturnState] = useState(\"null\");\n  const [returnAddress, setReturnAddress] = useState(\"null\");\n  const [returnPhone, setReturnPhone] = useState(\"null\");\n  const [returnToOrigin, setReturnToOrigin] = useState(true);\n\n  //const { id } = useParams();\n  //const { data, error, isPending } = useFetch('http://localhost:9000/pincode/122002');\n  //console.log(data);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n\n    convertFormToJson();\n    /*\n    fetch('http://localhost:8000/blogs/', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      // history.go(-1);\n      history.push('/');\n    })*/\n  };\n\n  const convertFormToJson = () => {\n    //shipmentObject\n    const shipment = {\n      addressType: \"Home\",\n    };\n    shipment.add = consigneeAddress;\n    shipment.phone = consigneePhone;\n    shipment.payment_mode = codType;\n    shipment.name = consigneeName;\n    shipment.pin = consigneePincode;\n    shipment.order = orderReferenceNumber;\n    shipment.consignee_gst_amount = orderTotalValue;\n    shipment.integrated_gst_amount = orderTotalValue;\n    shipment.seller_gst_tin = sellerGSTIN;\n    shipment.gst_cess_amount = orderTaxValue;\n    shipment.client_name = userID;\n    shipment.tax_value = orderTaxValue;\n    shipment.seller_tin = sellerGSTIN;\n    shipment.seller_gst_amount = orderTaxValue;\n    shipment.seller_inv = invoiceNumer;\n    shipment.city = consigneeCity;\n    shipment.commodity_value = orderCommodityValue;\n    shipment.weight = orderWeightInGrams;\n    shipment.return_state = returnState;\n    shipment.seller_name = sellerName;\n    shipment.fragile_shipment = orderMarkAsFragile;\n    shipment.return_city = returnCity;\n    shipment.return_phone = returnPhone;\n    shipment.category_of_goods = orderProductCategory;\n    shipment.cod_amount = orderCODValue;\n    shipment.return_country = \"India\";\n    shipment.state = consigneeState;\n    shipment.dangerous_good = false;\n    shipment.order_date = invoiceDate;\n    shipment.return_add = returnAddress;\n    shipment.total_amount = orderTotalValue;\n    shipment.seller_add = sellerAddress;\n    shipment.country = \"India\";\n    shipment.return_pin = returnPincode;\n    shipment.return_name = sellerName;\n    shipment.quantity = orderNumberOfItems;\n\n    //pickupObject\n    const pickup_location = {\n      name: \"mohit\",\n      country: \"India\",\n      phone: \"7045814007\",\n    };\n    pickup_location.city = pickupCity;\n    pickup_location.address = pickupAddress;\n    pickup_location.pincode = pickupPincode;\n    console.log(JSON.stringify(pickup_location));\n\n    var shipmentString = JSON.stringify(shipment);\n\n    console.log(\"ShipmentString: \" + shipmentString);\n    var shipmentObject = shipmentString.slice(11);\n    console.log(shipmentObject);\n    const jsonObjectForServer = { shipments: [JSON.parse(shipmentString)] };\n\n    jsonObjectForServer.pickup_location = pickup_location;\n    console.log(JSON.stringify(jsonObjectForServer));\n\n    let headers = new Headers();\n\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Authorization\", \"Basic \" + btoa(\"Mohit:Same\"));\n    console.log(headers.get(\"Authorization\"));\n\n    fetch(\"http://api.apilogistics.in:4000/api/orders\", {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(jsonObjectForServer),\n    }).then(async (response) => {\n      try {\n        const data = await response.text();\n        console.log(\"response data?\", data);\n      } catch (error) {\n        console.log(\"Error happened here!\");\n        console.error(error);\n      }\n    });\n\n    //\"{\\\"shipments\\\":[{\\\"add\\\":\\\"M25,NelsonMarg\\\",\\\"address_type\\\":\\\"home\\\",\\\"phone\\\":1234567890,\\\"payment_mode\\\":\\\"Prepaid\\/COD\\/Pickup\\/REPL\\\",\\\"name\\\":\\\"name-of-the-consignee\\\",\\\"pin\\\":325007,\\\"order\\\":\\\"orderid\\\",\\\"consignee_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"integrated_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"ewbn\\\":\\\"if ewbn is there no need to send additional keys for generating ewaybill only if the total package amount is greater than or equal to 50k\\\",\\\"consignee_gst_tin\\\":\\\"consignee_gst_tin\\\",\\\"seller_gst_tin\\\":\\\"seller_gst_tin\\\",\\\"client_gst_tin\\\":\\\"client_gst_tin\\\",\\\"hsn_code\\\":\\\"Required for ewaybill-hsn_code\\\",\\\"gst_cess_amount\\\":\\\"for ewaybill-gst_cess_amount\\\",\\\"client\\\":\\\"client-name-as-registered-with-delhivery\\\",\\\"tax_value\\\":\\\"taxvalue\\\",\\\"seller_tin\\\":\\\"sellertin\\\",\\\"seller_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"seller_inv\\\":\\\"sellerinv\\\",\\\"city\\\":\\\"Kota\\\",\\\"commodity_value\\\":\\\"commodityvalue\\\",\\\"weight\\\":\\\"1000\\\",\\\"return_state\\\":\\\"returnstate\\\",\\\"document_number\\\":\\\"for ewaybill-document_number,only mandatory in case of ewbn\\\",\\\"od_distance\\\":\\\"ditance between origin and destination\\\",\\\"sales_tax_form_ack_no\\\":\\\"ackno.\\\",\\\"document_type\\\":\\\"for ewaybill-document_type,only mandatory in case of ewbn\\\",\\\"seller_cst\\\":\\\"sellercst\\\",\\\"seller_name\\\":\\\"sellername\\\",\\\"fragile_shipment\\\":\\\"true\\\",\\\"return_city\\\":\\\"returncity\\\",\\\"return_phone\\\":\\\"returnphone\\\",\\\"qc\\\":{\\\"item\\\":[{\\\"images\\\":\\\"img1-static image url\\\",\\\"color\\\":\\\"Color of the product\\\",\\\"reason\\\":\\\"Damaged Product\\/Return reason of the product\\\",\\\"descr\\\":\\\"description of the product\\\",\\\"ean\\\":\\\"EAN no. that needs to be checked for a product (apparels)\\\",\\\"imei\\\":\\\"IMEI no. that needs to be checked for a product (mobile phones)\\\",\\\"brand\\\":\\\"Brand of the product\\\",\\\"pcat\\\":\\\"Product category like mobile, apparels etc.\\\",\\\"si\\\":\\\"special instruction for FE\\\"}]},\\\"shipment_height\\\":10,\\\"shipment_width\\\":11,\\\"shipment_length\\\":12,\\\"category_of_goods\\\":\\\"categoryofgoods\\\",\\\"cod_amount\\\":2125,\\\"return_country\\\":\\\"returncountry\\\",\\\"document_date\\\":\\\"for ewaybill-datetime,mandatory in case of ewbn\\\",\\\"taxable_amount\\\":\\\"for ewaybill-taxable_amount in case of multiple items only\\\",\\\"products_desc\\\":\\\"for ewaybill-mandatory,incase of intra-state required only\\\",\\\"state\\\":\\\"Rajasthan\\\",\\\"dangerous_good\\\":\\\"True\\/False\\\",\\\"waybill\\\":\\\"waybillno.(trackingid)\\\",\\\"consignee_tin\\\":\\\"consigneetin\\\",\\\"order_date\\\":\\\"2017-05-20 12:00:00\\\",\\\"return_add\\\":\\\"returnaddress\\\",\\\"total_amount\\\":21840,\\\"seller_add\\\":\\\"selleradd\\\",\\\"country\\\":\\\"India\\\",\\\"return_pin\\\":\\\"returnpin\\\",\\\"extra_parameters\\\":{\\\"return_reason\\\":\\\"string\\\"},\\\"return_name\\\":\\\"name\\\",\\\"supply_sub_type\\\":\\\"for ewaybill-supply_sub_type,mandatory in case of ewbn\\\",\\\"plastic_packaging\\\":\\\"true\\/false\\\",\\\"quantity\\\":\\\"quantity\\\"}],\\\"pickup_location\\\":{\\\"name\\\":\\\"client-warehouse-name-as-registered-with-delhivery\\\",\\\"city\\\":\\\"city\\\",\\\"pin\\\":\\\"pin-code\\\",\\\"country\\\":\\\"country\\\",\\\"phone\\\":\\\"phoneno.\\\",\\\"add\\\":\\\"+}}\"\n  };\n\n  const handleConsigneePincode = async (event) => {\n    const userName = \"Mohit\";\n    const pass = \"Same\";\n    console.log(event.target.value);\n    var consigneePincode = event.target.value;\n    if (consigneePincode > 100000) {\n      setConsigneePincode(consigneePincode);\n      // try {\n      //   const data = await fetch(`http://localhost:4000/api/pincode/201001`);\n      //   console.log(data.body);\n      //   setConsigneeCity(data.CITY);\n      //   setConsigneeState(data.STATE);\n      //   console.log(\"city:\" + data.CITY);\n      // } catch (err) {\n      //   if (err.name === \"AbortError\") {\n      //     console.log(\"fetch aborted\");\n      //   } else {\n      //     // auto catches network / connection error\n      //     //setIsPending(false);\n      //     //setError(err.message);\n      //     console.log(err.message);\n      //   }\n      // }\n      try {\n        const data = await sendRequest(\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\n          \"GET\",\n          null,\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\n        );\n\n        setConsigneeCity(data.body[0].CITY);\n        setConsigneeState(data.body[0].STATE);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleReturnPincode = async (event) => {\n    const userName = \"Mohit\";\n    const pass = \"Same\";\n    console.log(event.target.value);\n    var returnPincode = event.target.value;\n    if (returnPincode > 100000) {\n      setReturnPincode(returnPincode);\n      try {\n        const data = await sendRequest(\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\n          \"GET\",\n          null,\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\n        );\n\n        setConsigneeCity(data.body[0].CITY);\n        setConsigneeState(data.body[0].STATE);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handlePickupPincode = async (event) => {\n    const userName = \"Mohit\";\n    const pass = \"Same\";\n    console.log(event.target.value);\n    var pickupPincode = event.target.value;\n    if (pickupPincode > 100000) {\n      setPickupPincode(pickupPincode);\n      // fetch(\"http://localhost:9000/pincode/\" + pickupPincode)\n      //   .then((res) => {\n      //     //console.log(res.json());\n      //     return res.json();\n      //   })\n      //   .then((data) => {\n      //     setPickupCity(data.CITY);\n      //     setPickupState(data.STATE);\n      //     console.log(\"city:\" + data.CITY);\n      //   })\n      //   .catch((err) => {\n      //     if (err.name === \"AbortError\") {\n      //       console.log(\"fetch aborted\");\n      //     } else {\n      //       // auto catches network / connection error\n      //       //setIsPending(false);\n      //       //setError(err.message);\n      //       console.log(err.message);\n      //     }\n      //   });\n      try {\n        const data = await sendRequest(\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\n          \"GET\",\n          null,\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\n        );\n\n        setConsigneeCity(data.body[0].CITY);\n        setConsigneeState(data.body[0].STATE);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleCommodityValue = (event) => {\n    console.log(event.target.value);\n    var commodity_value = event.target.value;\n    setTaxValue(commodity_value * 0.18);\n    setTotalValue(commodity_value * 1.18);\n    setCODValue(commodity_value * 1.18);\n  };\n\n  function MyDropzone() {\n    const onDrop = useCallback((acceptedFiles) => {\n      // Do something with the files\n    }, []);\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n    });\n\n    return (\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )}\n      </div>\n    );\n  }\n\n  /*\n  const { error, isPending, data } = useFetch('http://localhost:9000/pincode/'+122002);\n    var cityFromPincode = data.CITY;\n    setConsigneeCity(cityFromPincode);*/\n\n  return (\n    <div className=\"create\">\n      <h2>Book a new shipment</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Blog title:</label>\n        <input\n          type=\"text\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Blog body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <label>Blog author:</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"mario\">mario</option>\n          <option value=\"yoshi\">yoshi</option>\n        </select>\n\n        <label>Forward/Reverse Type:</label>\n        <select>\n          <option value=\"Forward\" selected>\n            {\" \"}\n            Forward\n          </option>\n          <option value=\"Reverse\">Reverse</option>\n        </select>\n\n        <label>COD Type:</label>\n        <select\n          value={paymentMode}\n          onChange={(e) => setPaymentMode(e.target.value)}\n        >\n          <option value=\"COD\">COD</option>\n          <option value=\"Prepaid\" selected>\n            Prepaid\n          </option>\n        </select>\n        <h2>Consignee(To) Details</h2>\n        <div className=\"flexbox-container\">\n          <div className=\"customer-details-left\">\n            <label>Consignee pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required\n              //value = {consigneePincode}\n              onChange={handleConsigneePincode}\n            ></input>\n\n            <label>Consignee State*</label>\n            <select value={consigneeState}>\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Consignee City*</label>\n            <input type=\"text\" value={consigneeCity} required></input>\n\n            <label>Consignee Address*</label>\n            <input\n              type=\"text\"\n              required\n              value={consigneeAddress}\n              onChange={(e) => setConsigneeAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-details-right\">\n            <label>Consignee Name*</label>\n            <input\n              type=\"text\"\n              required\n              value={consigneeName}\n              onChange={(e) => setConsigneeName(e.target.value)}\n            />\n\n            <label>Consignee Phone*</label>\n            <input\n              type=\"number\"\n              required\n              value={consigneePhone}\n              onChange={(e) => setConsigneePhone(e.target.value)}\n            />\n\n            <label>Consignee Email</label>\n            <input\n              type=\"text\"\n              value={consigneeEmail}\n              onChange={(e) => setConsigneeEmail(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <h2>Order Details</h2>\n        <div className=\"flexbox-container\">\n          <div className=\"customer-details-left\">\n            <label>Reference number*</label>\n            <input\n              type=\"text\"\n              required\n              value={orderReferenceNumber}\n              onChange={(e) => setOrderReferenceNumber(e.target.value)}\n            ></input>\n            <label>Number of items*</label>\n            <input\n              type=\"number\"\n              defaultValue=\"1\"\n              required\n              value={orderNumberOfItems}\n              onChange={(e) => setNumberOfItems(e.target.value)}\n            ></input>\n\n            <label>Weight in Grams*</label>\n            <input\n              type=\"number\"\n              required\n              value={orderWeightInGrams}\n              onChange={(e) => setOrderWeightInGrams(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-details-mid\">\n            <label>Commodity Value*</label>\n            <input\n              type=\"number\"\n              required\n              //value = {orderCommodityValue}\n              onChange={handleCommodityValue}\n            ></input>\n\n            <label>Tax Value*</label>\n            <input\n              type=\"number\"\n              required\n              value={orderTaxValue}\n              onChange={(e) => setTaxValue(e.target.value)}\n            ></input>\n\n            <label>Total Value*</label>\n            <input\n              type=\"number\"\n              required\n              value={orderTotalValue}\n              onChange={(e) => setTotalValue(e.target.value)}\n            ></input>\n\n            <label>COD Amount*</label>\n            <input\n              type=\"number\"\n              required\n              value={orderCODValue}\n              onChange={(e) => setCODValue(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-details-right\">\n            <label>Product Description*</label>\n            <input\n              type=\"text\"\n              required\n              value={orderProductDescription}\n              onChange={(e) => setOrderProductDescription(e.target.value)}\n            />\n\n            <label>Product Category*</label>\n            <input\n              type=\"text\"\n              required\n              value={orderProductCategory}\n              onChange={(e) => setOrderProductCategory(e.target.value)}\n            />\n\n            <label>Mark as fragile</label>\n            <input\n              value={orderMarkAsFragile}\n              type=\"checkbox\"\n              onChange={(e) => setOrderMarkAsFragile(e.target.value)}\n            />\n\n            <label>HSN Code</label>\n            <input\n              type=\"text\"\n              value={orderHSNCode}\n              onChange={(e) => setOrderHSNCode(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <h2>Seller Details</h2>\n        <div className=\"flexbox-container\">\n          <div className=\"customer-details-left\">\n            <label>Is the seller details same as registered details?</label>\n            <select\n              onChange={(e) => setSellerDetailsSameAsRegistered(e.target.value)}\n            >\n              <option value={true}>Yes</option>\n              <option value={false} selected>\n                No\n              </option>\n            </select>\n          </div>\n          <div className=\"customer-details-mid\">\n            <label>Seller Name*</label>\n            <input\n              type=\"text\"\n              required\n              value={sellerName}\n              onChange={(e) => setSellerName(e.target.value)}\n            ></input>\n\n            <label>Seller Address*</label>\n            <textarea\n              type=\"text\"\n              required\n              value={sellerAddress}\n              onChange={(e) => setSellerAddress(e.target.value)}\n            ></textarea>\n\n            <label>Seller GSTIN</label>\n            <input\n              type=\"text\"\n              size=\"15\"\n              value={sellerGSTIN}\n              onChange={(e) => setSellerGSTIN(e.target.value)}\n            ></input>\n          </div>\n\n          <div className=\"customer-details-right\">\n            <label>Invoice number</label>\n            <input\n              type=\"text\"\n              value={invoiceNumer}\n              onChange={(e) => setInvoicenumber(e.target.value)}\n            />\n\n            <label>Invoice date</label>\n            <input\n              type=\"date\"\n              value={invoiceDate}\n              onChange={(e) => setInvoiceDate(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <h2>Pickup and Return Details</h2>\n        <div className=\"flexbox-container\">\n          <div className=\"customer-details-left\"></div>\n          <div className=\"customer-details-mid\">\n            <label>Pickup Address</label>\n            <select></select>\n\n            <label>pickup pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required\n              onChange={handlePickupPincode}\n            ></input>\n\n            <label>Pickup State*</label>\n            <select\n              value={pickupState}\n              onChange={(e) => setPickupState(e.target.value)}\n            >\n              <option hidden disabled selected value></option>\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Pickup City*</label>\n            <input\n              type=\"text\"\n              value={pickupCity}\n              onChange={(e) => setPickupCity(e.target.value)}\n              required\n            />\n\n            <label>Pickup Address*</label>\n            <textarea\n              type=\"text\"\n              required\n              value={pickupAddress}\n              onChange={(e) => setPickupAddress(e.target.value)}\n            />\n          </div>\n\n          <div className=\"customer-details-right\">\n            <label>Return to Origin:</label>\n            <select\n              value={returnToOrigin}\n              onChange={(e) => setReturnToOrigin(e.target.value)}\n            >\n              <option value=\"Yes\">Yes</option>\n              <option value=\"No\">No</option>\n            </select>\n\n            <label>Return pincode*</label>\n            <input\n              type=\"number\"\n              min=\"100000\"\n              max=\"999999\"\n              required\n              onChange={handleReturnPincode}\n            ></input>\n\n            <label>Return State*</label>\n            <select value={returnState}>\n              <option selected value></option>\n              <option value=\"DELHI\">DELHI</option>\n              <option value=\"HARYANA\">HARYANA</option>\n              <option value=\"KARNATAKA\">KARNATAKA</option>\n              <option value=\"PUNJAB\">PUNJAB</option>\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\n              <option value=\"ASSAM\">ASSAM</option>\n              <option value=\"GUJARAT\">GUJARAT</option>\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\n              <option value=\"GOA\">GOA</option>\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\n              <option value=\"TELANGANA\">TELANGANA</option>\n              <option value=\"PONDICHERY\">PONDICHERY</option>\n              <option value=\"KERALA\">KERALA</option>\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\n              <option value=\"MANIPUR\">MANIPUR</option>\n              <option value=\"SIKKIM\">SIKKIM</option>\n              <option value=\"BIHAR\">BIHAR</option>\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\n              <option value=\"ORISSA\">ORISSA</option>\n              <option value=\"NAGALAND\">NAGALAND</option>\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\n              <option value=\"TRIPURA\">TRIPURA</option>\n              <option value=\"JHARKHAND\">JHARKHAND</option>\n              required\n            </select>\n\n            <label>Return City*</label>\n            <input type=\"text\" value={returnCity} required />\n\n            <label>Return Address*</label>\n            <textarea\n              type=\"text\"\n              required\n              value={returnAddress}\n              onChange={(e) => setReturnAddress(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <button>Add shipment</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateSingle;\n","/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Button.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Modal.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/components/Dropzone/Dropzone1.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/hooks/useHttpClient.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/CreateOrder/util/columns.js",[],"/home/rahulkumar/Documents/customerPortal2/src/shared/components/UIElements/Backdrop.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/Auth.js",["101"],"/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/components/Register.js",[],"/home/rahulkumar/Documents/customerPortal2/src/pages/Auth/components/Login.js",[],{"ruleId":"102","severity":1,"message":"103","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":12},{"ruleId":"102","severity":1,"message":"106","line":7,"column":42,"nodeType":"104","messageId":"105","endLine":7,"endColumn":52},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":17,"column":6,"nodeType":"113","endLine":17,"endColumn":19,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":1,"column":20,"nodeType":"104","messageId":"105","endLine":1,"endColumn":29},{"ruleId":"102","severity":1,"message":"116","line":30,"column":31,"nodeType":"104","messageId":"105","endLine":30,"endColumn":48},{"ruleId":"102","severity":1,"message":"117","line":43,"column":5,"nodeType":"104","messageId":"105","endLine":43,"endColumn":34},{"ruleId":"102","severity":1,"message":"118","line":64,"column":10,"nodeType":"104","messageId":"105","endLine":64,"endColumn":21},{"ruleId":"102","severity":1,"message":"119","line":64,"column":23,"nodeType":"104","messageId":"105","endLine":64,"endColumn":37},{"ruleId":"102","severity":1,"message":"120","line":68,"column":22,"nodeType":"104","messageId":"105","endLine":68,"endColumn":35},{"ruleId":"102","severity":1,"message":"121","line":69,"column":23,"nodeType":"104","messageId":"105","endLine":69,"endColumn":37},{"ruleId":"102","severity":1,"message":"122","line":71,"column":23,"nodeType":"104","messageId":"105","endLine":71,"endColumn":37},{"ruleId":"102","severity":1,"message":"123","line":80,"column":11,"nodeType":"104","messageId":"105","endLine":80,"endColumn":15},{"ruleId":"102","severity":1,"message":"124","line":293,"column":12,"nodeType":"104","messageId":"105","endLine":293,"endColumn":22},{"ruleId":"102","severity":1,"message":"125","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'clearError' is assigned a value but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setBlog'. Either include them or remove the dependency array.","ArrayExpression",["128"],"'useEffect' is defined but never used.","'setCommodityValue' is assigned a value but never used.","'sellerDetailsSameAsRegistered' is assigned a value but never used.","'pickupPhone' is assigned a value but never used.","'setPickupPhone' is assigned a value but never used.","'setReturnCity' is assigned a value but never used.","'setReturnState' is assigned a value but never used.","'setReturnPhone' is assigned a value but never used.","'blog' is assigned a value but never used.","'MyDropzone' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [id, sendRequest, setBlog]",{"range":"131","text":"132"},[559,572],"[id, sendRequest, setBlog]"]