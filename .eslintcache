[{"C:\\Nitin\\Internship Project\\customerPortal2\\src\\index.js":"1","C:\\Nitin\\Internship Project\\customerPortal2\\src\\App.js":"2","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\NotFound.js":"3","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\util\\GetPincodeDetails.js":"4","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\hooks\\useHttpClient.js":"5","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Modal.js":"6","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Backdrop.js":"7","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Navigation\\Navbar.js":"8","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Navigation\\Sidebar.js":"9","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Button.js":"10","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Dropzone\\Dropzone.js":"11","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Blog\\BlogDetails.js":"12","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\CreateOrder.js":"13","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\components\\CreateSingle.js":"14","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Home\\Home.js":"15","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Blog\\components\\BlogList.js":"16","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\components\\UploadCsv.js":"17","C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Dropzone\\Dropzone1.js":"18","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\util\\columns.js":"19"},{"size":391,"mtime":1616850231925,"results":"20","hashOfConfig":"21"},{"size":1115,"mtime":1617193210784,"results":"22","hashOfConfig":"21"},{"size":275,"mtime":1616812610500,"results":"23","hashOfConfig":"21"},{"size":683,"mtime":1616812609845,"results":"24","hashOfConfig":"21"},{"size":1374,"mtime":1616812609837,"results":"25","hashOfConfig":"21"},{"size":1235,"mtime":1617169639238,"results":"26","hashOfConfig":"21"},{"size":289,"mtime":1609058704023,"results":"27","hashOfConfig":"21"},{"size":675,"mtime":1617204729144,"results":"28","hashOfConfig":"21"},{"size":1599,"mtime":1616812610600,"results":"29","hashOfConfig":"21"},{"size":1017,"mtime":1609064514010,"results":"30","hashOfConfig":"21"},{"size":4364,"mtime":1617197675346,"results":"31","hashOfConfig":"21"},{"size":1227,"mtime":1617192467443,"results":"32","hashOfConfig":"21"},{"size":3059,"mtime":1617340538757,"results":"33","hashOfConfig":"21"},{"size":30526,"mtime":1617193155533,"results":"34","hashOfConfig":"21"},{"size":759,"mtime":1617192477581,"results":"35","hashOfConfig":"21"},{"size":428,"mtime":1616812611355,"results":"36","hashOfConfig":"21"},{"size":1484,"mtime":1617204646589,"results":"37","hashOfConfig":"21"},{"size":2097,"mtime":1617200096214,"results":"38","hashOfConfig":"21"},{"size":4256,"mtime":1617203513440,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"yfovmj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Nitin\\Internship Project\\customerPortal2\\src\\index.js",[],["84","85"],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\App.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\NotFound.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\util\\GetPincodeDetails.js",["86","87","88","89","90","91","92","93"],"import { useState, useEffect } from \"react\";\r\nimport { useHttpClient } from \"../hooks/useHttpClient\";\r\n\r\nconst GetPincodeDetails = (pincode) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  //   const {\r\n  // data: dataReceived,\r\n  // error: newError,\r\n  // isPending: newIsPending,\r\n  //   } = useFetch(\"http://localhost:9000/pincode/\" + pincode);\r\n  //   setData(dataReceived);\r\n  //   setIsPending(newIsPending);\r\n  //   setError(newError);\r\n  //   console.log(data);\r\n  //   return { data, isPending, error };\r\n  //   return {'Nitin'}\r\n};\r\n\r\nexport default GetPincodeDetails;\r\n",["94","95"],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\hooks\\useHttpClient.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Modal.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Backdrop.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Navigation\\Navbar.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Navigation\\Sidebar.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\UIElements\\Button.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Dropzone\\Dropzone.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Blog\\BlogDetails.js",["96"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient\";\r\n\r\nconst BlogDetails = () => {\r\n  const { isLoading, error, sendRequest } = useHttpClient();\r\n  const { id } = useParams();\r\n  const [blog, setBlog] = useState;\r\n  useEffect(() => {\r\n    const fetchBlogDetails = async () => {\r\n      try {\r\n        const data = await sendRequest(`http://localhost:8000/blogs/${id}`);\r\n        setBlog(data);\r\n      } catch (err) {}\r\n    };\r\n    fetchBlogDetails();\r\n  }, [sendRequest]);\r\n  const history = useHistory();\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      await sendRequest(`http://localhost:8000/blogs/${blog.id}`, \"DELETE\");\r\n\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      {isLoading && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p>Written by {blog.author}</p>\r\n          <div>{blog.body}</div>\r\n          <button onClick={handleClick}>delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\CreateOrder.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\components\\CreateSingle.js",["97","98","99","100","101","102","103","104","105","106"],"import { useState, useEffect, useCallback } from \"react\";\r\nimport { useHttpClient } from \"../../../shared/hooks/useHttpClient\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport base64 from \"base-64\";\r\nconst CreateSingle = () => {\r\n  const { sendRequest } = useHttpClient();\r\n  const [title, setTitle] = useState(\"1\");\r\n  const [body, setBody] = useState(\"1\");\r\n  const [author, setAuthor] = useState(\"mario\");\r\n  const codType = \"Prepaid\";\r\n  const userID = \"API logistics\";\r\n\r\n  /*\r\n  \r\n  const [returnState,setReturnState] = useState('');\r\n  const [returnCity,setReturnCity] = useState('');*/\r\n  const [paymentMode, setPaymentMode] = useState(\"prepaid\");\r\n  const [consigneePincode, setConsigneePincode] = useState();\r\n  const [consigneeCity, setConsigneeCity] = useState(\"null\");\r\n  const [consigneeState, setConsigneeState] = useState(\"null\");\r\n  const [consigneeAddress, setConsigneeAddress] = useState(\"null\");\r\n  const [consigneeName, setConsigneeName] = useState(\"null\");\r\n  const [consigneePhone, setConsigneePhone] = useState(\"7045814007\");\r\n  const [consigneeEmail, setConsigneeEmail] = useState(\"null\");\r\n\r\n  //orderDetails\r\n  const [orderReferenceNumber, setOrderReferenceNumber] = useState(\"null\");\r\n  const [orderNumberOfItems, setNumberOfItems] = useState(1);\r\n  const [orderWeightInGrams, setOrderWeightInGrams] = useState(500);\r\n  const [orderCommodityValue, setCommodityValue] = useState(\"null\");\r\n  const [orderTaxValue, setTaxValue] = useState(\"null\");\r\n  const [orderTotalValue, setTotalValue] = useState(\"null\");\r\n  const [orderCODValue, setCODValue] = useState(\"null\");\r\n  const [orderProductDescription, setOrderProductDescription] = useState(\r\n    \"null\"\r\n  );\r\n  const [orderProductCategory, setOrderProductCategory] = useState(\"null\");\r\n  const [orderHSNCode, setOrderHSNCode] = useState(\"null\");\r\n  const [orderMarkAsFragile, setOrderMarkAsFragile] = useState(false);\r\n\r\n  //sellerDetails\r\n  const [\r\n    sellerDetailsSameAsRegistered,\r\n    setSellerDetailsSameAsRegistered,\r\n  ] = useState(true);\r\n  const [sellerName, setSellerName] = useState(\"null\");\r\n  const [sellerGSTIN, setSellerGSTIN] = useState(\"null\");\r\n  const [sellerAddress, setSellerAddress] = useState(\"null\");\r\n  const [invoiceNumer, setInvoicenumber] = useState(\"null\");\r\n\r\n  //gettingTodaysdate\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, \"0\");\r\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  today = yyyy + \"/\" + dd + \"/\" + mm;\r\n  const [invoiceDate, setInvoiceDate] = useState(today);\r\n\r\n  //pickupDetails\r\n  const [pickupPincode, setPickupPincode] = useState(\"null\");\r\n  const [pickupCity, setPickupCity] = useState(\"null\");\r\n  const [pickupState, setPickupState] = useState(\"null\");\r\n  const [pickupAddress, setPickupAddress] = useState(\"null\");\r\n  const [pickupPhone, setPickupPhone] = useState(\"null\");\r\n\r\n  //ReturnDetails\r\n  const [returnPincode, setReturnPincode] = useState(\"null\");\r\n  const [returnCity, setReturnCity] = useState(\"null\");\r\n  const [returnState, setReturnState] = useState(\"null\");\r\n  const [returnAddress, setReturnAddress] = useState(\"null\");\r\n  const [returnPhone, setReturnPhone] = useState(\"null\");\r\n  const [returnToOrigin, setReturnToOrigin] = useState(true);\r\n\r\n  //const { id } = useParams();\r\n  //const { data, error, isPending } = useFetch('http://localhost:9000/pincode/122002');\r\n  //console.log(data);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    convertFormToJson();\r\n    /*\r\n    fetch('http://localhost:8000/blogs/', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push('/');\r\n    })*/\r\n  };\r\n\r\n  const convertFormToJson = () => {\r\n    //shipmentObject\r\n    const shipment = {\r\n      addressType: \"Home\",\r\n    };\r\n    shipment.add = consigneeAddress;\r\n    shipment.phone = consigneePhone;\r\n    shipment.payment_mode = codType;\r\n    shipment.name = consigneeName;\r\n    shipment.pin = consigneePincode;\r\n    shipment.order = orderReferenceNumber;\r\n    shipment.consignee_gst_amount = orderTotalValue;\r\n    shipment.integrated_gst_amount = orderTotalValue;\r\n    shipment.seller_gst_tin = sellerGSTIN;\r\n    shipment.gst_cess_amount = orderTaxValue;\r\n    shipment.client_name = userID;\r\n    shipment.tax_value = orderTaxValue;\r\n    shipment.seller_tin = sellerGSTIN;\r\n    shipment.seller_gst_amount = orderTaxValue;\r\n    shipment.seller_inv = invoiceNumer;\r\n    shipment.city = consigneeCity;\r\n    shipment.commodity_value = orderCommodityValue;\r\n    shipment.weight = orderWeightInGrams;\r\n    shipment.return_state = returnState;\r\n    shipment.seller_name = sellerName;\r\n    shipment.fragile_shipment = orderMarkAsFragile;\r\n    shipment.return_city = returnCity;\r\n    shipment.return_phone = returnPhone;\r\n    shipment.category_of_goods = orderProductCategory;\r\n    shipment.cod_amount = orderCODValue;\r\n    shipment.return_country = \"India\";\r\n    shipment.state = consigneeState;\r\n    shipment.dangerous_good = false;\r\n    shipment.order_date = invoiceDate;\r\n    shipment.return_add = returnAddress;\r\n    shipment.total_amount = orderTotalValue;\r\n    shipment.seller_add = sellerAddress;\r\n    shipment.country = \"India\";\r\n    shipment.return_pin = returnPincode;\r\n    shipment.return_name = sellerName;\r\n    shipment.quantity = orderNumberOfItems;\r\n\r\n    //pickupObject\r\n    const pickup_location = {\r\n      name: \"mohit\",\r\n      country: \"India\",\r\n      phone: \"7045814007\",\r\n    };\r\n    pickup_location.city = pickupCity;\r\n    pickup_location.address = pickupAddress;\r\n    pickup_location.pincode = pickupPincode;\r\n    console.log(JSON.stringify(pickup_location));\r\n\r\n    var shipmentString = JSON.stringify(shipment);\r\n\r\n    console.log(\"ShipmentString: \" + shipmentString);\r\n    var shipmentObject = shipmentString.slice(11);\r\n    console.log(shipmentObject);\r\n    const jsonObjectForServer = { shipments: [JSON.parse(shipmentString)] };\r\n\r\n    jsonObjectForServer.pickup_location = pickup_location;\r\n    console.log(JSON.stringify(jsonObjectForServer));\r\n\r\n    let headers = new Headers();\r\n\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\"Authorization\", \"Basic \" + btoa(\"Mohit:Same\"));\r\n    console.log(headers.get(\"Authorization\"));\r\n\r\n    fetch(\"http://api.apilogistics.in:4000/api/orders\", {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(jsonObjectForServer),\r\n    }).then(async (response) => {\r\n      try {\r\n        const data = await response.text();\r\n        console.log(\"response data?\", data);\r\n      } catch (error) {\r\n        console.log(\"Error happened here!\");\r\n        console.error(error);\r\n      }\r\n    });\r\n\r\n    //\"{\\\"shipments\\\":[{\\\"add\\\":\\\"M25,NelsonMarg\\\",\\\"address_type\\\":\\\"home\\\",\\\"phone\\\":1234567890,\\\"payment_mode\\\":\\\"Prepaid\\/COD\\/Pickup\\/REPL\\\",\\\"name\\\":\\\"name-of-the-consignee\\\",\\\"pin\\\":325007,\\\"order\\\":\\\"orderid\\\",\\\"consignee_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"integrated_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"ewbn\\\":\\\"if ewbn is there no need to send additional keys for generating ewaybill only if the total package amount is greater than or equal to 50k\\\",\\\"consignee_gst_tin\\\":\\\"consignee_gst_tin\\\",\\\"seller_gst_tin\\\":\\\"seller_gst_tin\\\",\\\"client_gst_tin\\\":\\\"client_gst_tin\\\",\\\"hsn_code\\\":\\\"Required for ewaybill-hsn_code\\\",\\\"gst_cess_amount\\\":\\\"for ewaybill-gst_cess_amount\\\",\\\"client\\\":\\\"client-name-as-registered-with-delhivery\\\",\\\"tax_value\\\":\\\"taxvalue\\\",\\\"seller_tin\\\":\\\"sellertin\\\",\\\"seller_gst_amount\\\":\\\"for ewaybill-incase of intra-state required only\\\",\\\"seller_inv\\\":\\\"sellerinv\\\",\\\"city\\\":\\\"Kota\\\",\\\"commodity_value\\\":\\\"commodityvalue\\\",\\\"weight\\\":\\\"1000\\\",\\\"return_state\\\":\\\"returnstate\\\",\\\"document_number\\\":\\\"for ewaybill-document_number,only mandatory in case of ewbn\\\",\\\"od_distance\\\":\\\"ditance between origin and destination\\\",\\\"sales_tax_form_ack_no\\\":\\\"ackno.\\\",\\\"document_type\\\":\\\"for ewaybill-document_type,only mandatory in case of ewbn\\\",\\\"seller_cst\\\":\\\"sellercst\\\",\\\"seller_name\\\":\\\"sellername\\\",\\\"fragile_shipment\\\":\\\"true\\\",\\\"return_city\\\":\\\"returncity\\\",\\\"return_phone\\\":\\\"returnphone\\\",\\\"qc\\\":{\\\"item\\\":[{\\\"images\\\":\\\"img1-static image url\\\",\\\"color\\\":\\\"Color of the product\\\",\\\"reason\\\":\\\"Damaged Product\\/Return reason of the product\\\",\\\"descr\\\":\\\"description of the product\\\",\\\"ean\\\":\\\"EAN no. that needs to be checked for a product (apparels)\\\",\\\"imei\\\":\\\"IMEI no. that needs to be checked for a product (mobile phones)\\\",\\\"brand\\\":\\\"Brand of the product\\\",\\\"pcat\\\":\\\"Product category like mobile, apparels etc.\\\",\\\"si\\\":\\\"special instruction for FE\\\"}]},\\\"shipment_height\\\":10,\\\"shipment_width\\\":11,\\\"shipment_length\\\":12,\\\"category_of_goods\\\":\\\"categoryofgoods\\\",\\\"cod_amount\\\":2125,\\\"return_country\\\":\\\"returncountry\\\",\\\"document_date\\\":\\\"for ewaybill-datetime,mandatory in case of ewbn\\\",\\\"taxable_amount\\\":\\\"for ewaybill-taxable_amount in case of multiple items only\\\",\\\"products_desc\\\":\\\"for ewaybill-mandatory,incase of intra-state required only\\\",\\\"state\\\":\\\"Rajasthan\\\",\\\"dangerous_good\\\":\\\"True\\/False\\\",\\\"waybill\\\":\\\"waybillno.(trackingid)\\\",\\\"consignee_tin\\\":\\\"consigneetin\\\",\\\"order_date\\\":\\\"2017-05-20 12:00:00\\\",\\\"return_add\\\":\\\"returnaddress\\\",\\\"total_amount\\\":21840,\\\"seller_add\\\":\\\"selleradd\\\",\\\"country\\\":\\\"India\\\",\\\"return_pin\\\":\\\"returnpin\\\",\\\"extra_parameters\\\":{\\\"return_reason\\\":\\\"string\\\"},\\\"return_name\\\":\\\"name\\\",\\\"supply_sub_type\\\":\\\"for ewaybill-supply_sub_type,mandatory in case of ewbn\\\",\\\"plastic_packaging\\\":\\\"true\\/false\\\",\\\"quantity\\\":\\\"quantity\\\"}],\\\"pickup_location\\\":{\\\"name\\\":\\\"client-warehouse-name-as-registered-with-delhivery\\\",\\\"city\\\":\\\"city\\\",\\\"pin\\\":\\\"pin-code\\\",\\\"country\\\":\\\"country\\\",\\\"phone\\\":\\\"phoneno.\\\",\\\"add\\\":\\\"+}}\"\r\n  };\r\n\r\n  const handleConsigneePincode = async (event) => {\r\n    const userName = \"Mohit\";\r\n    const pass = \"Same\";\r\n    console.log(event.target.value);\r\n    var consigneePincode = event.target.value;\r\n    if (consigneePincode > 100000) {\r\n      setConsigneePincode(consigneePincode);\r\n      // try {\r\n      //   const data = await fetch(`http://localhost:4000/api/pincode/201001`);\r\n      //   console.log(data.body);\r\n      //   setConsigneeCity(data.CITY);\r\n      //   setConsigneeState(data.STATE);\r\n      //   console.log(\"city:\" + data.CITY);\r\n      // } catch (err) {\r\n      //   if (err.name === \"AbortError\") {\r\n      //     console.log(\"fetch aborted\");\r\n      //   } else {\r\n      //     // auto catches network / connection error\r\n      //     //setIsPending(false);\r\n      //     //setError(err.message);\r\n      //     console.log(err.message);\r\n      //   }\r\n      // }\r\n      try {\r\n        const data = await sendRequest(\r\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\r\n        );\r\n\r\n        setConsigneeCity(data.body[0].CITY);\r\n        setConsigneeState(data.body[0].STATE);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReturnPincode = async (event) => {\r\n    const userName = \"Mohit\";\r\n    const pass = \"Same\";\r\n    console.log(event.target.value);\r\n    var returnPincode = event.target.value;\r\n    if (returnPincode > 100000) {\r\n      setReturnPincode(returnPincode);\r\n      try {\r\n        const data = await sendRequest(\r\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\r\n        );\r\n\r\n        setConsigneeCity(data.body[0].CITY);\r\n        setConsigneeState(data.body[0].STATE);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePickupPincode = async (event) => {\r\n    const userName = \"Mohit\";\r\n    const pass = \"Same\";\r\n    console.log(event.target.value);\r\n    var pickupPincode = event.target.value;\r\n    if (pickupPincode > 100000) {\r\n      setPickupPincode(pickupPincode);\r\n      // fetch(\"http://localhost:9000/pincode/\" + pickupPincode)\r\n      //   .then((res) => {\r\n      //     //console.log(res.json());\r\n      //     return res.json();\r\n      //   })\r\n      //   .then((data) => {\r\n      //     setPickupCity(data.CITY);\r\n      //     setPickupState(data.STATE);\r\n      //     console.log(\"city:\" + data.CITY);\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     if (err.name === \"AbortError\") {\r\n      //       console.log(\"fetch aborted\");\r\n      //     } else {\r\n      //       // auto catches network / connection error\r\n      //       //setIsPending(false);\r\n      //       //setError(err.message);\r\n      //       console.log(err.message);\r\n      //     }\r\n      //   });\r\n      try {\r\n        const data = await sendRequest(\r\n          `http://localhost:4000/api/pincode/${consigneePincode}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Basic \" + base64.encode(`${userName}:${pass}`) }\r\n        );\r\n\r\n        setConsigneeCity(data.body[0].CITY);\r\n        setConsigneeState(data.body[0].STATE);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommodityValue = (event) => {\r\n    console.log(event.target.value);\r\n    var commodity_value = event.target.value;\r\n    setTaxValue(commodity_value * 0.18);\r\n    setTotalValue(commodity_value * 1.18);\r\n    setCODValue(commodity_value * 1.18);\r\n  };\r\n\r\n  function MyDropzone() {\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n      // Do something with the files\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n      onDrop,\r\n    });\r\n\r\n    return (\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <p>Drop the files here ...</p>\r\n        ) : (\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /*\r\n  const { error, isPending, data } = useFetch('http://localhost:9000/pincode/'+122002);\r\n    var cityFromPincode = data.CITY;\r\n    setConsigneeCity(cityFromPincode);*/\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Book a new shipment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\r\n          <option value=\"mario\">mario</option>\r\n          <option value=\"yoshi\">yoshi</option>\r\n        </select>\r\n\r\n        <label>Forward/Reverse Type:</label>\r\n        <select>\r\n          <option value=\"Forward\" selected>\r\n            {\" \"}\r\n            Forward\r\n          </option>\r\n          <option value=\"Reverse\">Reverse</option>\r\n        </select>\r\n\r\n        <label>COD Type:</label>\r\n        <select\r\n          value={paymentMode}\r\n          onChange={(e) => setPaymentMode(e.target.value)}\r\n        >\r\n          <option value=\"COD\">COD</option>\r\n          <option value=\"Prepaid\" selected>\r\n            Prepaid\r\n          </option>\r\n        </select>\r\n        <h2>Consignee(To) Details</h2>\r\n        <div className=\"flexbox-container\">\r\n          <div className=\"customer-details-left\">\r\n            <label>Consignee pincode*</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"100000\"\r\n              max=\"999999\"\r\n              required\r\n              //value = {consigneePincode}\r\n              onChange={handleConsigneePincode}\r\n            ></input>\r\n\r\n            <label>Consignee State*</label>\r\n            <select value={consigneeState}>\r\n              <option selected value></option>\r\n              <option value=\"DELHI\">DELHI</option>\r\n              <option value=\"HARYANA\">HARYANA</option>\r\n              <option value=\"KARNATAKA\">KARNATAKA</option>\r\n              <option value=\"PUNJAB\">PUNJAB</option>\r\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\r\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\r\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\r\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\r\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\r\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\r\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\r\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\r\n              <option value=\"ASSAM\">ASSAM</option>\r\n              <option value=\"GUJARAT\">GUJARAT</option>\r\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\r\n              <option value=\"GOA\">GOA</option>\r\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\r\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\r\n              <option value=\"TELANGANA\">TELANGANA</option>\r\n              <option value=\"PONDICHERY\">PONDICHERY</option>\r\n              <option value=\"KERALA\">KERALA</option>\r\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\r\n              <option value=\"MANIPUR\">MANIPUR</option>\r\n              <option value=\"SIKKIM\">SIKKIM</option>\r\n              <option value=\"BIHAR\">BIHAR</option>\r\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\r\n              <option value=\"ORISSA\">ORISSA</option>\r\n              <option value=\"NAGALAND\">NAGALAND</option>\r\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\r\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\r\n              <option value=\"TRIPURA\">TRIPURA</option>\r\n              <option value=\"JHARKHAND\">JHARKHAND</option>\r\n              required\r\n            </select>\r\n\r\n            <label>Consignee City*</label>\r\n            <input type=\"text\" value={consigneeCity} required></input>\r\n\r\n            <label>Consignee Address*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={consigneeAddress}\r\n              onChange={(e) => setConsigneeAddress(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"customer-details-right\">\r\n            <label>Consignee Name*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={consigneeName}\r\n              onChange={(e) => setConsigneeName(e.target.value)}\r\n            />\r\n\r\n            <label>Consignee Phone*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              value={consigneePhone}\r\n              onChange={(e) => setConsigneePhone(e.target.value)}\r\n            />\r\n\r\n            <label>Consignee Email</label>\r\n            <input\r\n              type=\"text\"\r\n              value={consigneeEmail}\r\n              onChange={(e) => setConsigneeEmail(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <h2>Order Details</h2>\r\n        <div className=\"flexbox-container\">\r\n          <div className=\"customer-details-left\">\r\n            <label>Reference number*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={orderReferenceNumber}\r\n              onChange={(e) => setOrderReferenceNumber(e.target.value)}\r\n            ></input>\r\n            <label>Number of items*</label>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue=\"1\"\r\n              required\r\n              value={orderNumberOfItems}\r\n              onChange={(e) => setNumberOfItems(e.target.value)}\r\n            ></input>\r\n\r\n            <label>Weight in Grams*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              value={orderWeightInGrams}\r\n              onChange={(e) => setOrderWeightInGrams(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"customer-details-mid\">\r\n            <label>Commodity Value*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              //value = {orderCommodityValue}\r\n              onChange={handleCommodityValue}\r\n            ></input>\r\n\r\n            <label>Tax Value*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              value={orderTaxValue}\r\n              onChange={(e) => setTaxValue(e.target.value)}\r\n            ></input>\r\n\r\n            <label>Total Value*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              value={orderTotalValue}\r\n              onChange={(e) => setTotalValue(e.target.value)}\r\n            ></input>\r\n\r\n            <label>COD Amount*</label>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              value={orderCODValue}\r\n              onChange={(e) => setCODValue(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"customer-details-right\">\r\n            <label>Product Description*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={orderProductDescription}\r\n              onChange={(e) => setOrderProductDescription(e.target.value)}\r\n            />\r\n\r\n            <label>Product Category*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={orderProductCategory}\r\n              onChange={(e) => setOrderProductCategory(e.target.value)}\r\n            />\r\n\r\n            <label>Mark as fragile</label>\r\n            <input\r\n              value={orderMarkAsFragile}\r\n              type=\"checkbox\"\r\n              onChange={(e) => setOrderMarkAsFragile(e.target.value)}\r\n            />\r\n\r\n            <label>HSN Code</label>\r\n            <input\r\n              type=\"text\"\r\n              value={orderHSNCode}\r\n              onChange={(e) => setOrderHSNCode(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <h2>Seller Details</h2>\r\n        <div className=\"flexbox-container\">\r\n          <div className=\"customer-details-left\">\r\n            <label>Is the seller details same as registered details?</label>\r\n            <select\r\n              onChange={(e) => setSellerDetailsSameAsRegistered(e.target.value)}\r\n            >\r\n              <option value={true}>Yes</option>\r\n              <option value={false} selected>\r\n                No\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div className=\"customer-details-mid\">\r\n            <label>Seller Name*</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={sellerName}\r\n              onChange={(e) => setSellerName(e.target.value)}\r\n            ></input>\r\n\r\n            <label>Seller Address*</label>\r\n            <textarea\r\n              type=\"text\"\r\n              required\r\n              value={sellerAddress}\r\n              onChange={(e) => setSellerAddress(e.target.value)}\r\n            ></textarea>\r\n\r\n            <label>Seller GSTIN</label>\r\n            <input\r\n              type=\"text\"\r\n              size=\"15\"\r\n              value={sellerGSTIN}\r\n              onChange={(e) => setSellerGSTIN(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"customer-details-right\">\r\n            <label>Invoice number</label>\r\n            <input\r\n              type=\"text\"\r\n              value={invoiceNumer}\r\n              onChange={(e) => setInvoicenumber(e.target.value)}\r\n            />\r\n\r\n            <label>Invoice date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={invoiceDate}\r\n              onChange={(e) => setInvoiceDate(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <h2>Pickup and Return Details</h2>\r\n        <div className=\"flexbox-container\">\r\n          <div className=\"customer-details-left\"></div>\r\n          <div className=\"customer-details-mid\">\r\n            <label>Pickup Address</label>\r\n            <select></select>\r\n\r\n            <label>pickup pincode*</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"100000\"\r\n              max=\"999999\"\r\n              required\r\n              onChange={handlePickupPincode}\r\n            ></input>\r\n\r\n            <label>Pickup State*</label>\r\n            <select\r\n              value={pickupState}\r\n              onChange={(e) => setPickupState(e.target.value)}\r\n            >\r\n              <option hidden disabled selected value></option>\r\n              <option selected value></option>\r\n              <option value=\"DELHI\">DELHI</option>\r\n              <option value=\"HARYANA\">HARYANA</option>\r\n              <option value=\"KARNATAKA\">KARNATAKA</option>\r\n              <option value=\"PUNJAB\">PUNJAB</option>\r\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\r\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\r\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\r\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\r\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\r\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\r\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\r\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\r\n              <option value=\"ASSAM\">ASSAM</option>\r\n              <option value=\"GUJARAT\">GUJARAT</option>\r\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\r\n              <option value=\"GOA\">GOA</option>\r\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\r\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\r\n              <option value=\"TELANGANA\">TELANGANA</option>\r\n              <option value=\"PONDICHERY\">PONDICHERY</option>\r\n              <option value=\"KERALA\">KERALA</option>\r\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\r\n              <option value=\"MANIPUR\">MANIPUR</option>\r\n              <option value=\"SIKKIM\">SIKKIM</option>\r\n              <option value=\"BIHAR\">BIHAR</option>\r\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\r\n              <option value=\"ORISSA\">ORISSA</option>\r\n              <option value=\"NAGALAND\">NAGALAND</option>\r\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\r\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\r\n              <option value=\"TRIPURA\">TRIPURA</option>\r\n              <option value=\"JHARKHAND\">JHARKHAND</option>\r\n              required\r\n            </select>\r\n\r\n            <label>Pickup City*</label>\r\n            <input\r\n              type=\"text\"\r\n              value={pickupCity}\r\n              onChange={(e) => setPickupCity(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <label>Pickup Address*</label>\r\n            <textarea\r\n              type=\"text\"\r\n              required\r\n              value={pickupAddress}\r\n              onChange={(e) => setPickupAddress(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"customer-details-right\">\r\n            <label>Return to Origin:</label>\r\n            <select\r\n              value={returnToOrigin}\r\n              onChange={(e) => setReturnToOrigin(e.target.value)}\r\n            >\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n\r\n            <label>Return pincode*</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"100000\"\r\n              max=\"999999\"\r\n              required\r\n              onChange={handleReturnPincode}\r\n            ></input>\r\n\r\n            <label>Return State*</label>\r\n            <select value={returnState}>\r\n              <option selected value></option>\r\n              <option value=\"DELHI\">DELHI</option>\r\n              <option value=\"HARYANA\">HARYANA</option>\r\n              <option value=\"KARNATAKA\">KARNATAKA</option>\r\n              <option value=\"PUNJAB\">PUNJAB</option>\r\n              <option value=\"ANDHRA PRADESH\">ANDHRA PRADESH</option>\r\n              <option value=\"UTTAR PRADESH\">UTTAR PRADESH</option>\r\n              <option value=\"CHANDIGARH\">CHANDIGARH</option>\r\n              <option value=\"MAHARASHTRA\">MAHARASHTRA</option>\r\n              <option value=\"HIMACHAL PRADESH\">HIMACHAL PRADESH</option>\r\n              <option value=\"JAMMU AND KASHMIR\">JAMMU AND KASHMIR</option>\r\n              <option value=\"UTTARAKHAND\">UTTARAKHAND</option>\r\n              <option value=\"RAJASTHAN\">RAJASTHAN</option>\r\n              <option value=\"ASSAM\">ASSAM</option>\r\n              <option value=\"GUJARAT\">GUJARAT</option>\r\n              <option value=\"TAMIL NADU\">TAMIL NADU</option>\r\n              <option value=\"GOA\">GOA</option>\r\n              <option value=\"CHHATTISGARH\">CHHATTISGARH</option>\r\n              <option value=\"MADHYA PRADESH\">MADHYA PRADESH</option>\r\n              <option value=\"TELANGANA\">TELANGANA</option>\r\n              <option value=\"PONDICHERY\">PONDICHERY</option>\r\n              <option value=\"KERALA\">KERALA</option>\r\n              <option value=\"WEST BENGAL\">WEST BENGAL</option>\r\n              <option value=\"MANIPUR\">MANIPUR</option>\r\n              <option value=\"SIKKIM\">SIKKIM</option>\r\n              <option value=\"BIHAR\">BIHAR</option>\r\n              <option value=\"ANDAMAN & NICOBAR\">ANDAMAN & NICOBAR</option>\r\n              <option value=\"ORISSA\">ORISSA</option>\r\n              <option value=\"NAGALAND\">NAGALAND</option>\r\n              <option value=\"ARUNACHAL PRADESH\">ARUNACHAL PRADESH</option>\r\n              <option value=\"MEGHALAYA\">MEGHALAYA</option>\r\n              <option value=\"TRIPURA\">TRIPURA</option>\r\n              <option value=\"JHARKHAND\">JHARKHAND</option>\r\n              required\r\n            </select>\r\n\r\n            <label>Return City*</label>\r\n            <input type=\"text\" value={returnCity} required />\r\n\r\n            <label>Return Address*</label>\r\n            <textarea\r\n              type=\"text\"\r\n              required\r\n              value={returnAddress}\r\n              onChange={(e) => setReturnAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button>Add shipment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSingle;\r\n","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Home\\Home.js",["107"],"import { useEffect, useState } from \"react\";\r\nimport BlogList from \"../Blog/components/BlogList\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient\";\r\n\r\nconst Home = () => {\r\n  const [blogs, setBlogs] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      try {\r\n        const data = await sendRequest(\"http://localhost:8000/blogs\");\r\n        setBlogs(data);\r\n      } catch (err) {}\r\n    };\r\n    fetchBlogs();\r\n  }, [sendRequest]);\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <div>{error}</div>}\r\n      {isLoading && <div>Loading...</div>}\r\n      {blogs && <BlogList blogs={blogs} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\Blog\\components\\BlogList.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\components\\UploadCsv.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\shared\\components\\Dropzone\\Dropzone1.js",[],"C:\\Nitin\\Internship Project\\customerPortal2\\src\\pages\\CreateOrder\\util\\columns.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":20,"nodeType":"114","messageId":"115","endLine":1,"endColumn":29},{"ruleId":"112","severity":1,"message":"116","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":23},{"ruleId":"112","severity":1,"message":"117","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":5,"column":16,"nodeType":"114","messageId":"115","endLine":5,"endColumn":23},{"ruleId":"112","severity":1,"message":"119","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":19},{"ruleId":"112","severity":1,"message":"120","line":6,"column":21,"nodeType":"114","messageId":"115","endLine":6,"endColumn":33},{"ruleId":"112","severity":1,"message":"121","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":7,"column":17,"nodeType":"114","messageId":"115","endLine":7,"endColumn":25},{"ruleId":"108","replacedBy":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":17,"column":6,"nodeType":"127","endLine":17,"endColumn":19,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":20,"nodeType":"114","messageId":"115","endLine":1,"endColumn":29},{"ruleId":"112","severity":1,"message":"129","line":30,"column":31,"nodeType":"114","messageId":"115","endLine":30,"endColumn":48},{"ruleId":"112","severity":1,"message":"130","line":43,"column":5,"nodeType":"114","messageId":"115","endLine":43,"endColumn":34},{"ruleId":"112","severity":1,"message":"131","line":64,"column":10,"nodeType":"114","messageId":"115","endLine":64,"endColumn":21},{"ruleId":"112","severity":1,"message":"132","line":64,"column":23,"nodeType":"114","messageId":"115","endLine":64,"endColumn":37},{"ruleId":"112","severity":1,"message":"133","line":68,"column":22,"nodeType":"114","messageId":"115","endLine":68,"endColumn":35},{"ruleId":"112","severity":1,"message":"134","line":69,"column":23,"nodeType":"114","messageId":"115","endLine":69,"endColumn":37},{"ruleId":"112","severity":1,"message":"135","line":71,"column":23,"nodeType":"114","messageId":"115","endLine":71,"endColumn":37},{"ruleId":"112","severity":1,"message":"136","line":80,"column":11,"nodeType":"114","messageId":"115","endLine":80,"endColumn":15},{"ruleId":"112","severity":1,"message":"137","line":293,"column":12,"nodeType":"114","messageId":"115","endLine":293,"endColumn":22},{"ruleId":"112","severity":1,"message":"138","line":7,"column":42,"nodeType":"114","messageId":"115","endLine":7,"endColumn":52},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHttpClient' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'isPending' is assigned a value but never used.","'setIsPending' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setBlog'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'setCommodityValue' is assigned a value but never used.","'sellerDetailsSameAsRegistered' is assigned a value but never used.","'pickupPhone' is assigned a value but never used.","'setPickupPhone' is assigned a value but never used.","'setReturnCity' is assigned a value but never used.","'setReturnState' is assigned a value but never used.","'setReturnPhone' is assigned a value but never used.","'blog' is assigned a value but never used.","'MyDropzone' is defined but never used.","'clearError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [id, sendRequest, setBlog]",{"range":"144","text":"145"},[575,588],"[id, sendRequest, setBlog]"]